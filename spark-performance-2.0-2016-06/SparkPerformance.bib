
@misc{agarwal_apache_2016,
	title = {Apache {Spark} as a {Compiler}},
	url = {https://databricks.com/blog/2016/05/23/apache-spark-as-a-compiler-joining-a-billion-rows-per-second-on-a-laptop.html},
	abstract = {Deep dive into the new Tungsten execution engine.},
	urldate = {2016-06-09},
	author = {Agarwal, Sameer and Liu, Davies and Xin, Reynold S.},
	month = may,
	year = {2016}
}

@article{graefe_volcano-extensible_1994,
	title = {Volcano-an extensible and parallel query evaluation system},
	volume = {6},
	issn = {1041-4347},
	doi = {10.1109/69.273032},
	abstract = {To investigate the interactions of extensibility and parallelism in database query processing, we have developed a new dataflow query execution system called Volcano. The Volcano effort provides a rich environment for research and education in database systems design, heuristics for query optimization, parallel query execution, and resource allocation. Volcano uses a standard interface between algebra operators, allowing easy addition of new operators and operator implementations. Operations on individual items, e.g., predicates, are imported into the query processing operators using support functions. The semantics of support functions is not prescribed; any data type including complex objects and any operation can be realized. Thus, Volcano is extensible with new operators, algorithms, data types, and type-specific methods. Volcano includes two novel meta-operators. The choose-plan meta-operator supports dynamic query evaluation plans that allow delaying selected optimization decisions until run-time, e.g., for embedded queries with free variables. The exchange meta-operator supports intra-operator parallelism on partitioned datasets and both vertical and horizontal inter-operator parallelism, translating between demand-driven dataflow within processes and data-driven dataflow between processes. All operators, with the exception of the exchange operator, have been designed and implemented in a single-process environment, and parallelized using the exchange operator. Even operators not yet designed can be parallelized using this new operator if they use and provide the interator interface. Thus, the issues of data manipulation and parallelism have become orthogonal, making Volcano the first implemented query execution engine that effectively combines extensibility and parallelism},
	number = {1},
	journal = {IEEE Transactions on Knowledge and Data Engineering},
	author = {Graefe, G.},
	month = feb,
	year = {1994},
	keywords = {Algebra, algebra operators, choose-plan meta-operator, database query processing, Database systems, data-driven dataflow, dataflow query execution system, Data models, data structures, data type, Delay, demand-driven dataflow, dynamic query evaluation plans, extensibility, horizontal inter-operator parallelism, intra-operator parallelism, novel meta-operators, Parallel processing, parallel programming, parallel query evaluation system, partitioned datasets, predicates, query optimization, query processing, query processing operators, resource allocation, Resource management, Runtime, semantics, support functions, type-specific methods., Vehicle dynamics, Volcano, Volcanoes},
	pages = {120--135},
	file = {IEEE Xplore Abstract Record:/home/medale/.zotero/zotero/liisrdu0.default/zotero/storage/RZE253IW/login.html:text/html}
}

@misc{xin_project_2015,
	title = {Project {Tungsten} - {Bringing} {Apache} {Spark} {Closer} to {Bare} {Metal}},
	url = {https://databricks.com/blog/2015/04/28/project-tungsten-bringing-spark-closer-to-bare-metal.html},
	author = {Xin, Reynold S. and Rosen, Josh},
	month = apr,
	year = {2015}
}

@misc{armbrust_deep_2015,
	title = {Deep {Dive} into {Spark} {SQL}â€™s {Catalyst} {Optimizer}},
	url = {https://databricks.com/blog/2015/04/13/deep-dive-into-spark-sqls-catalyst-optimizer.html},
	author = {Armbrust, Michael and Huai, Yin and Liang, Cheng and Xin, Reynold S. and Zaharia, Matei},
	month = apr,
	year = {2015}
}